[{"/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/index.js":"1","/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/reportWebVitals.js":"2","/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/App.js":"3","/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/components/SearchForm.js":"4","/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/components/NavBar.js":"5","/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/components/SavedBooks.js":"6"},{"size":500,"mtime":1606981340380,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1606981340382,"results":"9","hashOfConfig":"8"},{"size":659,"mtime":1607189941383,"results":"10","hashOfConfig":"8"},{"size":2977,"mtime":1608002475824,"results":"11","hashOfConfig":"8"},{"size":399,"mtime":1607126938566,"results":"12","hashOfConfig":"8"},{"size":1764,"mtime":1608023717415,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"14wumx3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/index.js",[],["29","30"],"/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/reportWebVitals.js",[],"/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/App.js",[],"/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/components/SearchForm.js",["31"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction SearchForm() {\n\n    const [book, setBook] = useState(\"\");\n    const [result, setResult] = useState([]);\n    const [apiKey, setApiKey] = useState(\"AIzaSyCbRCw5-xnZwZLcCzEouao5J4ManBQDyyY\");\n  \n    function handleChange(event) {\n      const book = event.target.value;\n      setBook(book);\n  \n    };\n  \n    function handleSubmit(event) {\n        console.log(\"handling submit\");\n      event.preventDefault();\n  \n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\" + apiKey)\n        .then(data => {\n          setResult(data.data.items)\n        })\n  \n    };\n\n    function handleSave(event) {\n        event.preventDefault();\n        console.log(event.target.id);\n        const index = event.target.id;\n        const newBook={\n            id: result[index].id,\n            title: result[index].volumeInfo.title,\n            authors: result[index].volumeInfo.authors[0],\n            description: result[index].volumeInfo.description,\n            image: result[index].volumeInfo.imageLinks.thumbnail,\n            link: result[index].volumeInfo.infoLink,\n\n        }\n    \n        axios.post(\"/api/book\", newBook)\n          .then(data => {\n            console.log(data);\n          })\n      };\n  \n    return (\n        <div className=\"jumbotron\">\n        <h1 className=\"display-2 text-center\"> Google Books Search</h1>\n        <form >\n          <div className=\"form-group\">\n            <input\n  \n              type=\"text\" onChange={handleChange}\n              className=\"form-control mt-10\"\n              placeholder=\"Search For A Book\"\n              autoComplete=\"off\">\n  \n            </input>\n          <Button style={{float:\"right\"}} onClick={handleSubmit} variant=\"primary\">Search</Button>\n          </div>\n        </form>\n  \n        {result.map((book, index) => (\n          <Table responsive key={book.id}>\n            <tbody>\n  \n              <tr>\n                <td>\n                <Button id={index} variant=\"info\" size=\"sm\" onClick={handleSave}> Save Book </Button>\n                  <h4>Title \n                  </h4>\n                  {book.volumeInfo.title}\n                </td>\n              </tr>\n              <tr>\n                <h4>Author</h4>\n                {book.volumeInfo.authors}\n              </tr>\n              <tr>\n                <h4>Description</h4>\n                {book.volumeInfo.description}\n              </tr>\n              <tr>\n                <img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title}></img>\n              </tr>\n              <tr>Link:\n              <a href={book.volumeInfo.infoLink}>\n                  {book.volumeInfo.infoLink}{' '}\n                </a>\n              </tr>\n            </tbody>\n          </Table>\n        ))}\n      </div>\n    )\n  };\n  \n  export default SearchForm;\n","/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/components/NavBar.js",[],"/Users/aluna/Desktop/BootcampHW/GoogleBooksSearch/client/src/components/SavedBooks.js",["32"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n// import Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table'\n// import Button from 'react-bootstrap/Button';\n\n\nfunction SavedBooks() {\n    const [book, setBook] = useState([]);\n    const [result, setResult] = useState([]);\n\n    axios.get('/api/books', book)\n        .then(data => {\n            setResult(data.data)\n        });\n\n\n    return (\n        <div className=\"jumbotron\">\n            <h1 className=\"display-2 text-center\">Saved Books</h1>\n\n            {result.map((book, index) => (\n                <Table responsive key={book.id}>\n                    <tbody>\n\n                        <tr>\n                            <td>\n                            {/* <Button id={index} variant=\"info\" size=\"sm\" onClick={handleDelete}> Delete Book </Button> */}\n                                <h4>Title\n                  </h4>\n                                {book.title}\n                            </td>\n                        </tr>\n                        <tr>\n                            <h4>Author</h4>\n                            {book.authors}\n                        </tr>\n                        <tr>\n                            <h4>Description</h4>\n                            {book.description}\n                        </tr>\n                        <tr>\n                            <img src={book.image} alt={book.title}></img>\n                        </tr>\n                        <tr>Link:\n              <a href={book.link}>\n                                {book.link}{' '}\n                            </a>\n                        </tr>\n                    </tbody>\n                </Table>\n            ))}\n        </div>\n\n    );\n}\n\nexport default SavedBooks;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":11,"column":20,"nodeType":"39","messageId":"40","endLine":11,"endColumn":29},{"ruleId":"37","severity":1,"message":"41","line":9,"column":18,"nodeType":"39","messageId":"40","endLine":9,"endColumn":25},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'setApiKey' is assigned a value but never used.","Identifier","unusedVar","'setBook' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]